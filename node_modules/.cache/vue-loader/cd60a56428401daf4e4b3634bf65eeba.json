{"remainingRequest":"/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/src/components/Graph.vue?vue&type=script&lang=ts&","dependencies":[{"path":"/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/src/components/Graph.vue","mtime":1570134662967},{"path":"/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/node_modules/cache-loader/dist/cjs.js","mtime":1560507360114},{"path":"/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/node_modules/ts-loader/index.js","mtime":1560507358238},{"path":"/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/node_modules/cache-loader/dist/cjs.js","mtime":1560507360114},{"path":"/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/node_modules/vue-loader/lib/index.js","mtime":1560507360466}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Vue } from \"vue-property-decorator\";\nconst NeoVis = require(\"neovis.js\");\n\n@Component({\n  components: {}\n})\nexport default class Graph extends Vue {\n  public viz: any;\n  public draw() {\n    const config = {\n      container_id: \"viz\",\n      server_url: \"bolt://localhost:7687\",\n      server_user: \"neo4j\",\n      server_password: \"techcrunch\",\n      labels: {\n        Character: {\n          caption: \"id\",\n          size: \"centrality\"\n        }\n      },\n      // relationships: {\n      //   INTERACTS: {\n      //     thickness: \"weight\",\n      //     caption: false\n      //   }\n      // },\n      initial_cypher: \"MATCH (n)-[r:LINK]->(m) RETURN n,r,m\"\n    };\n    this.viz = new NeoVis.default(config);\n    this.viz.registerOnEvent(\"completed\", this.render_completed);\n    this.viz.render();\n  }\n\n  public render_completed(stats: any) {\n    this.$store.commit(\"setNodes\", this.viz._nodes);\n  }\n\n  stabilizeGraph() {\n    this.viz.stabilize();\n  }\n\n  get nodes() {\n    return this.$store.state.nodes.graphNodes;\n  }\n\n  public async mounted() {\n    this.draw();\n  }\n}\n",{"version":3,"sources":["Graph.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Graph.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div style=\"height: calc(100vh - 134px);\">\n    <nav class=\"level\">\n      <!-- Left side -->\n      <div class=\"level-left\"></div>\n\n      <!-- Right side -->\n      <div class=\"level-right\">\n        <p class=\"level-item\">\n          <button class=\"button button-secondary\" v-on:click=\"stabilizeGraph()\">\n                <span class=\"icon\">\n      <i class=\"material-icons\">grain</i>\n    </span>\n    <span>Stabilize</span>\n          </button>\n        </p>\n      </div>\n    </nav>\n    <div id=\"viz\"></div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from \"vue-property-decorator\";\nconst NeoVis = require(\"neovis.js\");\n\n@Component({\n  components: {}\n})\nexport default class Graph extends Vue {\n  public viz: any;\n  public draw() {\n    const config = {\n      container_id: \"viz\",\n      server_url: \"bolt://localhost:7687\",\n      server_user: \"neo4j\",\n      server_password: \"techcrunch\",\n      labels: {\n        Character: {\n          caption: \"id\",\n          size: \"centrality\"\n        }\n      },\n      // relationships: {\n      //   INTERACTS: {\n      //     thickness: \"weight\",\n      //     caption: false\n      //   }\n      // },\n      initial_cypher: \"MATCH (n)-[r:LINK]->(m) RETURN n,r,m\"\n    };\n    this.viz = new NeoVis.default(config);\n    this.viz.registerOnEvent(\"completed\", this.render_completed);\n    this.viz.render();\n  }\n\n  public render_completed(stats: any) {\n    this.$store.commit(\"setNodes\", this.viz._nodes);\n  }\n\n  stabilizeGraph() {\n    this.viz.stabilize();\n  }\n\n  get nodes() {\n    return this.$store.state.nodes.graphNodes;\n  }\n\n  public async mounted() {\n    this.draw();\n  }\n}\n</script>\n<style lang=\"scss\">\n#viz {\n  border: 2px solid #dcdcdc;\n  max-height: calc(100vh - 150px);\n}\n\n.level {\n  background-color: white;\n  padding: 0;\n  margin-top: 10px !important;\n  margin-bottom: 10px !important;\n}\n</style>"]}]}