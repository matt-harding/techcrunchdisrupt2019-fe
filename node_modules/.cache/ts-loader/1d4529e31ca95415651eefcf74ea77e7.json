{"remainingRequest":"/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/node_modules/ts-loader/index.js??ref--12-1!/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/src/store/modules/nodes.ts","dependencies":[{"path":"/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/src/store/modules/nodes.ts","mtime":1570130433187},{"path":"/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/node_modules/cache-loader/dist/cjs.js","mtime":1560507360114},{"path":"/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/node_modules/ts-loader/index.js","mtime":1560507358238}],"contextDependencies":[],"result":["function initialState() {\n    return {\n        graphNodes: []\n    };\n}\nvar state = initialState();\nvar mutations = {\n    setNodes: function (nodesState, graphNodes) {\n        nodesState.graphNodes = graphNodes;\n    }\n};\nvar actions = {};\nexport var nodes = {\n    state: state,\n    mutations: mutations,\n    actions: actions\n};\n",{"version":3,"file":"/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/src/store/modules/nodes.ts","sourceRoot":"","sources":["/Users/matthewharding/Desktop/Techcrunch Disrupt 2019/techcrunchdisrupt2019-fe/src/store/modules/nodes.ts"],"names":[],"mappings":"AAGA,SAAS,YAAY;IACjB,OAAO;QACH,UAAU,EAAE,EAAE;KACjB,CAAC;AACN,CAAC;AAED,IAAM,KAAK,GAAe,YAAY,EAAE,CAAC;AAEzC,IAAM,SAAS,GAA6B;IACxC,QAAQ,EAAR,UAAS,UAAU,EAAE,UAAc;QAC/B,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;IACvC,CAAC;CACJ,CAAC;AAEF,IAAM,OAAO,GAAsC,EAClD,CAAC;AAEF,MAAM,CAAC,IAAM,KAAK,GAAkC;IAChD,KAAK,OAAA;IACL,SAAS,WAAA;IACT,OAAO,SAAA;CACV,CAAC","sourcesContent":["import { MutationTree, ActionTree, Module } from 'vuex';\nimport { RootState, NodesState } from './../types';\n\nfunction initialState(): NodesState {\n    return {\n        graphNodes: []\n    };\n}\n\nconst state: NodesState = initialState();\n\nconst mutations: MutationTree<NodesState> = {\n    setNodes(nodesState, graphNodes: []) {\n        nodesState.graphNodes = graphNodes;\n    }\n};\n\nconst actions: ActionTree<NodesState, RootState> = {\n};\n\nexport const nodes: Module<NodesState, RootState> = {\n    state,\n    mutations,\n    actions\n};\n"]}]}